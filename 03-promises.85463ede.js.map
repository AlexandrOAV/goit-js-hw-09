{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,MAAO,QACPC,SAAU,YACVC,SAAU,OACVC,QAAS,EACTC,aAAc,MACdC,KAAK,EACLC,QAAS,IACTC,iBAAkB,IAClBC,aAAa,EACbC,iBAAkB,kBAClBC,WAAW,EACXC,oBAAoB,EACpBC,cAAc,EACdC,cAAc,EAEdC,GAAI,iBACJC,UAAW,kBACXC,OAAQ,KACRC,WAAY,YACZC,SAAU,OACVC,cAAc,EACdC,qBAAsB,IACtBC,kBAAmB,OACnBC,aAAa,EACbC,SAAS,EACTC,gBAAgB,EAChBC,qBAAsB,QACtBC,oBAAqB,OAErBC,QAAS,CACPC,WAAY,UACZC,UAAW,OACXC,eAAgB,0BAChBC,kBAAmB,kBACnBC,qBAAsB,sBACtBC,qBAAsB,kBACtBxB,iBAAkB,wBAGpByB,QAAS,CACPN,WAAY,UACZC,UAAW,OACXC,eAAgB,0BAChBC,kBAAmB,kBACnBC,qBAAsB,sBACtBC,qBAAsB,kBACtBxB,iBAAkB,yBAGtB,IAAM0B,EAASC,SAASC,cAAc,SAChCC,EAAaF,SAASC,cAAc,qBACpCE,EAAYH,SAASC,cAAc,oBACnCG,EAAaJ,SAASC,cAAc,sBACtCI,EAAO,KACPC,EAAM,KACNC,EAAS,KAEb,SAASC,EAAc3C,EAAU4C,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACJH,GACFF,EAAQ,CAAE9C,WAAUoD,MAAAR,IACpBS,QAAQC,IAAIT,UAEbE,EAAO,CAAE/C,WAAUoD,MAAAR,G,GAEpBA,E,IAIPV,EAAOqB,iBAAiB,UACxB,SAAiBC,GACfA,EAAMC,iBACNjB,EAAQkB,OAAOrB,EAAWsB,OAC1BlB,EAAOiB,OAAOpB,EAAUqB,OACxBjB,EAASgB,OAAOnB,EAAYoB,OAE5B,IADA,IAAIC,EAAW,EACNC,EAAI,EAAGA,EAAInB,EAAQmB,IAC5BlB,EAAciB,EAAUpB,GACvBsB,MAAK,SAAAC,G,IAAG/D,EAAQ+D,EAAR/D,SAAUgE,EAAKD,EAALX,MACjBxD,EAAAF,GAASG,OAAO6B,QAAQ,uBAAwCuC,OAAfjE,EAAS,QAAYiE,OAAND,EAAM,M,IAEvEE,OAAM,SAAAH,G,IAAG/D,EAAQ+D,EAAR/D,SAAUmE,EAAKJ,EAALX,MAClBxD,EAAAF,GAASG,OAAOoC,QAAQ,sBAAqCgC,OAAfjE,EAAS,QAAYiE,OAANE,EAAM,M,IAEnE3B,GAASC,EACTmB,GAAY,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nNotiflix.Notify.init({\n  width: '360px',\n  position: 'right-top', // 'right-top' - 'right-bottom' - 'left-top' - 'left-bottom' - 'center-top' - 'center-bottom' - 'center-center'\n  distance: '10px',\n  opacity: 1,\n  borderRadius: '5px',\n  rtl: false,\n  timeout: 4000,\n  messageMaxLength: 110,\n  backOverlay: false,\n  backOverlayColor: 'rgba(0,0,0,0.5)',\n  plainText: true,\n  showOnlyTheLastOne: false,\n  clickToClose: false,\n  pauseOnHover: true,\n\n  ID: 'NotiflixNotify',\n  className: 'notiflix-notify',\n  zindex: 4001,\n  fontFamily: 'Quicksand',\n  fontSize: '16px',\n  cssAnimation: true,\n  cssAnimationDuration: 400,\n  cssAnimationStyle: 'fade', // 'fade' - 'zoom' - 'from-right' - 'from-top' - 'from-bottom' - 'from-left'\n  closeButton: false,\n  useIcon: false,\n  useFontAwesome: false,\n  fontAwesomeIconStyle: 'basic', // 'basic' - 'shadow'\n  fontAwesomeIconSize: '34px',\n\n  success: {\n    background: '#32c682',\n    textColor: '#fff',\n    childClassName: 'notiflix-notify-success',\n    notiflixIconColor: 'rgba(0,0,0,0.2)',\n    fontAwesomeClassName: 'fas fa-check-circle',\n    fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\n    backOverlayColor: 'rgba(50,198,130,0.2)',\n  },\n\n  failure: {\n    background: '#ff5549',\n    textColor: '#fff',\n    childClassName: 'notiflix-notify-failure',\n    notiflixIconColor: 'rgba(0,0,0,0.2)',\n    fontAwesomeClassName: 'fas fa-times-circle',\n    fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\n    backOverlayColor: 'rgba(255,85,73,0.2)',\n  },\n});\nconst formEl = document.querySelector('.form');\nconst inputDelay = document.querySelector('input[name=delay]');\nconst inputStep = document.querySelector('input[name=step]');\nconst inputAmount =document.querySelector('input[name=amount]');\nlet delay= null;\nlet step= null;\nlet amount = null;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n       if (shouldResolve) {\n         resolve({ position, delay })\n         console.log(Promise)\n      } else {\n        reject({ position, delay })\n      }\n    }, delay)\n  })\n};\n\nformEl.addEventListener('submit', addForm);\nfunction addForm(event) {\n  event.preventDefault();\n  delay = Number(inputDelay.value);\n  step = Number(inputStep.value);\n  amount = Number(inputAmount.value);\n  let position = 1;\n  for (let i = 0; i < amount; i++){\n  createPromise(position, delay)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    delay += step;\n    position += 1;\n  }\n}\n\n\n \n\n"],"names":["$6JpON","parcelRequire","$parcel$interopDefault","Notify","init","width","position","distance","opacity","borderRadius","rtl","timeout","messageMaxLength","backOverlay","backOverlayColor","plainText","showOnlyTheLastOne","clickToClose","pauseOnHover","ID","className","zindex","fontFamily","fontSize","cssAnimation","cssAnimationDuration","cssAnimationStyle","closeButton","useIcon","useFontAwesome","fontAwesomeIconStyle","fontAwesomeIconSize","success","background","textColor","childClassName","notiflixIconColor","fontAwesomeClassName","fontAwesomeIconColor","failure","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$inputAmount","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","console","log","addEventListener","event","preventDefault","Number","value","position1","i","then","param","delay2","concat","catch","delay3"],"version":3,"file":"03-promises.85463ede.js.map"}